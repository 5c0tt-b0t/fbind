GENERIC SETUP

	Source ($intsdFolderName) --> Destination ($extsdFolderName)
	"fbind" is optional while the dot (.) preceding it is recommend (prevents media duplication)
		from_to Download .fbind/Download
		from_to MagiskManager .fbind/MagiskManager
		from_to OGMods .fbind/OGMods
		from_to TitaniumBackup .fbind/TitaniumBackup
		from_to WhatsApp .fbind/WhatsApp
		from_to Hyperionics .fbind/Hyperionics
		from_to DraStic .fbind/DraStic
		from_to Pictures .fbind/Pictures
		from_to DCIM .fbind/DCIM
		from_to Android/data/com.xda.labs .fbind/XDALabsFiles
		from_to MEGA .fbind/MEGA
		from_to docs .fbind/docs
		from_to projects .fbind/projects
		from_to SHAREit .fbind/SHAREit
		from_to FastHub .fbind/FastHub
		from_to ADM .fbind/ADM
		from_to Dukto .fbind/Dukto
		from_to Music .fbind/Music

	When source and destination paths end in the same folder name (i.e., $intsd/folder & $extsd/folder) and the destination contains no media files:
		target data --> similar to "from_to data data", but -- why bother writing "data" twice? -- again, this is for non-media folders only.
		target TWRP/BACKUPS --> same effect as "from_to TWRP/BACKUPS TWRP/BACKUPS". Notice the unnecessary repetition.

	Auto-remove unwanted/stubborn files/folders from $intsd & $extsd -- no need to specify the storage itself, just the target file/folder:
		cleanup Podcasts
		cleanup Alarms
		cleanup com.cmcm.whatscalllite
		cleanup Documents
		cleanup Notifications
		cleanup Ringtones
		cleanup Keku
		cleanup .mobvista700
		cleanup Android/obj
		cleanup Android/SLOWDNS_TEMP_DIR
		cleanup Android/TROID_TEMP_DIR
		cleanup Android/.playstor.srf
		cleanup Android/data/.um

	Bind mount the entire /data/media/obb folder to $extsd/Android/obb
		obb
    
  Bind mount only internal storage folders or folders in the same root path
    bind_mnt /data/testFolder /data/media/0/testFolder
    bind_mnt $insd/folderToMount $intsd/mountPoint
#####################################################################



ONE LINE SETUP

	Bind-mount the entire $intsd to $extsd/.fbind (includes obb)
		int_extf
#####################################################################



MULTI-USER SETUP
    
	User 11
		bind_mnt $extsd/FOLDER /data/media/11/FOLDER

	User 13
		bind_mnt $extsd/FOLDER /data/media/13/FOLDER
    
  User n
		bind_mnt $extsd/FOLDER /data/media/n/FOLDER
  
#####################################################################



APP DATA TO SDCARD (a Linux file system (i.e, EXT2-4, F2FS) is required for this. Alternatively, an ext4 .img file (loop device) can be used)

	To $intsd/.app_data/pkgName (when your device hasn't or "doesn't support" sdcard)
		extsd_path $intsd
		app_data pkgName

	To $extsd/.app_data/pkgName
		app_data pkgName
    
  To $extsd/app_data.img
    LOOP /path/to/.img/file /path/to/mount/point
    app_data pkgName /path/to/loop/device/mount/point
#####################################################################



ADVANCED SETUP

	Mount an ext4 ext4 .img file (loop device) (preceded by e2fsck -fy /path/to/.img/file)
		LOOP [/path/to/.img/file] [/path/to/mount/point]
		Optionally, it can be used by fbind as $extsd by setting the line "extsd_path [/loop/device/mount/point]"

	Check for and/or fix SD card file system errors before system gets a chance to mount the target partition.
		fsck -OPTION(s) /path/to/partition --> i.e., fsck.f2fs -f /dev/block/mmcblk1
    
	Auto-mount a partition
		Syntax: part [/path/to/partition] [/path/to/mount/point] [filesystem] ["fsck OPTION(s)" (filesystem specific, optional)]
      part /dev/block/mmcblk1 /data/.extsd f2fs "fsck.f2fs -f"
      Optionally, it can be used by fbind as $extsd by setting the line "extsd_path [/partition/mount/point]"

	Open a LUKS/LUKS2 volume (executed manually by running "fbind" on terminal)
    Syntax: part [/path/to/partition--L] [/path/to/mount/point] [filesystem] ["fsck OPTION(s)" (filesystem specific, optional)]
      part /dev/block/mmcblk1--L /data/.extsd f2fs "fsck.f2fs -f"
      Optionally, it can be used by fbind as $extsd by setting the line "extsd_path [/partition/mount/point]"

	Fully replace $intsd with PARTITION (similar to the "one line" setup above, but more advanced -- hides extsd completely)
		part /dev/block/mmcblk1 /data/media/0 f2fs # Note: fsck'ing here would delay the process, thus making it unreliable.
		extsd_path $intsd
		target Android
		target data
		obb

	 Bind-mount $intsd to $extsd/.fbind (same as above, but less aggressive)
		bind_mnt $extsd/.fbind $intsd -mv # Notes: The "-mv" argument tells `fbind -m` to not ignore this line (otherwise ignored by default, for safety concerns). The bind_mnt syntax is similar to that of "mount -o bind".
		target Android
		target data
		obb
#####################################################################



MISC

	If you have more than one folder listed in /mnt/media_rw or your sdcard path is different from the standard /mnt/media_rw/sdcardName, you must specify it.
		extsd_path /alternate/path/to/extsd

	If bound folders are displayed as files, test with the following lines, one at a time and/or both:
		setenforce auto (or setenforce 0)
		intsd_path /storage/emulated/0
  
  Disable config auto-backup
    no_bkp
#####################################################################



ESSENTIAL TERMINAL COMMANDS

	"fbind -a "LINE"" -- add a single line to your config
		Example: fbind -a "from_to \"WhatsaApp/Media/WhatsApp Video\" \".fbind/WhatsaApp/Media/WhatsApp Video\" (notice the quotes and backslashes)
	"fbind -a" -- add multiple lines (interactive mode)

	"fbind -as "SOURCE_PATH"" -- add a single "from_to SOURCE .fbind/SOURCE" line
		Example: fbind -as "WhatsaApp/Media/WhatsApp Video" (notice the quotes)
	"fbind -as" -- asks for SOURCES and adds multiple corresponding "from_to SOURCE .fbind/SOURCE" lines (interactive mode)

	"fbind -ad 'matchingPkgName1|matchingPkgName2|matchingPkgName...' -- add a single or multiple "app_data pkgName" line(s)
		Example: fbind -ad 'spotify|xda'
	"fbind -ad" -- add multiple "app_data pkgName" lines (interactive mode)

	"fbind -r 'PATTERN1|PATTERN2|PATTERN...' -- remove line(s) matching PATTERN(s)
		Example: fbind -r 'WhatsApp.*|ADM'
	"fbind -r" -- remove multiple lines (interactive mode)

	"fbind restore 'PATTERN1|PATTERN2|PATTERNn' -- move data associated with line(s) matching PATTERN(s) back to original location(s)
		Example: fbind restore 'WhatsApp Video|git'
	"fbind restore" -- batch move select data back to original locations (interactive mode)
  
  fbind -b 'WhatsA|Downl|ADM' -- bind-mount matching folders (no arguments -- bind-mount all)
  fbind -u '^obb$|mmcblk1p3|loop1.img' -- unmount matching folders, partitions and/or loop devices (no arguments -- unmount all, except app_data lines without "-u" argument, partitions and loop devices)
  fbind -m mGit -- move matching data to $extsd (no arguments -- move all as per config). This only affects unbound folders.
